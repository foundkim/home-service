version: '3'

services:
  # Backend / Database
  database:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.db.prod.env
    networks:
      - back

  # Backend / API
  api:
    image: ${BACKEND_IMAGE}
    volumes:
      - static_volume:/opt/app/api/staticfiles
      - media_volume:/opt/app/api/mediafiles
    restart: always
    env_file:
      - ./.server.prod.env
    depends_on:
      - database
    networks:
      - front
      - back

  # Backend / Proxy
  proxy:
    image: nginx
    volumes:
      - ../backend/proxy:/etc/nginx/templates
      -  static_volume:/home/app/web/staticfiles
      -  media_volume:/home/app/web/mediafiles
    env_file:
      - ./.server.prod.env
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - database
      - api
    networks:
      - front
      - docker-network

  # Frontend / App / Web
  # web:
  #   image: web
  #   build: ../frontend/app/web
  #   restart: always
  #   depends_on:
  #     - api
  #   networks:
  #     - front

  # Frontend / Landing
  # landing:
  #   image: landing
  #   build: ../frontend/landing
  #   networks:
  #     - front
volumes:
  postgres_data:
  static_volume:
  media_volume:


networks:
  front:
    driver: bridge
  back:
    driver: bridge
  docker-network:
    driver: bridge